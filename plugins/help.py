from telethon import events, Button
from core.client import client

# ุชุตููู ูููุฒ ููุงุฆูุฉ ุงูุฃูุงูุฑ ูุน ุชูุณููุงุช ูุงุถุญุฉ ูุฒุฎุฑูุฉ ุจุณูุทุฉ
HEADER = (
    "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ\n"
    "โ   ๐ฉ ูุงุฆูุฉ ุฃูุงูุฑ FLEX โ ููููุฒุฉ ูุณููุฉ ุงูุงุณุชุฎุฏุงู ๐ช   โ\n"
    "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ\n"
)

FOOTER = "\nโ ูุณุชูุฏ ุงูุฃูุงูุฑ โข FLEX โ\n"

SEPARATOR = "\nโโโโโโโโโโโ\n"

COMMANDS = {
    "ุงูุฅุญุตุงุฆูุงุช": [
        (".ุงุญุตุงุฆูุงุชู", "ูุนุฑุถ ุฅุญุตุงุฆูุงุช ุงูุญุณุงุจ: ุงููุณุชุฎุฏูููุ ุงููุฌููุนุงุชุ ุงููููุงุชุ ุงูุจูุชุงุช."),
        (".ูุนูููุงุชู", "ุชูุงุตูู ูุชูุฏูุฉ ุนู ุงูุญุณุงุจ: ุนุฏุฏ ุงููุญุงุฏุซุงุชุ ุงูุจูุชุงุชุ ุงููุฌููุนุงุช ูุงููููุงุช."),
    ],
    "ุงูุชุฎุฒูู": [
        (".ุชูุนูู ุงูุชุฎุฒูู", "ุฅูุดุงุก ูุชูุนูู ูุฑูุจ ุชุฎุฒูู ุฎุงุต ุจุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ ูู ุงูุฎุงุต."),
        (".ุชุนุทูู ุงูุชุฎุฒูู", "ุฅููุงู ุงูุชุฎุฒูู ูุญุฐู ุชุนุฑูู ูุฌููุนุฉ ุงูุชุฎุฒูู ุงููุญููุฉ."),
    ],
    "ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ": [
        (".ุงุถู ุฑุฏ + ุงููููุฉ + ุงูุฑุฏ", "ุฅุถุงูุฉ ุฑุฏ ุชููุงุฆู ูููููุฉ ุงููุญุฏุฏุฉ."),
        (".ุงูุฑุฏูุฏ", "ุนุฑุถ ุฌููุน ุงูุฑุฏูุฏ ุงููุฎุฒูุฉ."),
        (".ุชูุนูู ููุง", "ุชูุนูู ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ ูู ุงููุฌููุนุฉ ุงูุญุงููุฉ."),
        (".ุชุนุทูู ููุง", "ุชุนุทูู ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ ูู ุงููุฌููุนุฉ ุงูุญุงููุฉ."),
    ],
    "ูุถุน ุงูุบูุงุจ ูุงูุฑุฏูุฏ ุงููุฎุตุตุฉ": [
        (".ุชุดุบูู ุงูุฑุฏ", "ุชุดุบูู ุงูุฑุฏ ุงูุชููุงุฆู ููุฎุงุต."),
        (".ุงููุฎุตุต ุชุดุบูู", "ุชุดุบูู ุงูุฑุฏูุฏ ุงููุฎุตุตุฉ ุงููุจููุฉ ุนูู ูุตูุต ูุญุฏุฏุฉ."),
        (".ุชุนุทูู ุงูุฑุฏ", "ุชุนุทูู ุงูุฑุฏ ุงูุชููุงุฆู ูุงูุฑุฏูุฏ ุงููุฎุตุตุฉ."),
        (".ูููุดุฉ ุงูุฑุฏ", "ุชุนููู ุฑุณุงูุฉ ูุญุฏุฏุฉ ูุชููู ูููุดุฉ ุงูุฑุฏ (ุจุงูุฑุฏ ุนูู ุฑุณุงูุฉ)."),
        (".ุฑุฏ <ุงููุต>", "ุฅุถุงูุฉ ุฑุฏ ูุฎุตุต ููุต ูุชู ุงูุฑุฏ ุนููู."),
        (".ุญุฐู ุฑุฏ", "ุญุฐู ุฑุฏ ูุฎุตุต (ุจุงูุฑุฏ ุนูู ูุต ูุถุงู ุณุงุจููุง)."),
        (".ุณูุงุญ", "ุณูุงุญ ูุญุงุฏุซุฉ ุฎุงุตุฉ ูุนููุฉ ูู ูููุฏ ุงูุฑุฏ."),
        (".ุงูุบุงุก ุงูุณูุงุญ", "ุฅูุบุงุก ุงูุณูุงุญ ููุญุงุฏุซุฉ ุฎุงุตุฉ."),
    ],
    "ุงูุฃูุนุงุจ": [
        (".ุณูู [1-6] | ๐ฏ", "ูุนุจุฉ ุงูุณูู. ูููู ุชุญุฏูุฏ ุฑูู ูุทููุจ."),
        (".ูุฑุฏ [1-6] | ๐ฒ", "ูุนุจุฉ ุงููุฑุฏ. ูููู ุชุญุฏูุฏ ุฑูู ูุทููุจ."),
        (".ุณูู [1-5] | ๐", "ูุนุจุฉ ูุฑุฉ ุงูุณูุฉ."),
        (".ูุฑุฉ [1-5] | โฝ๏ธ", "ูุนุจุฉ ูุฑุฉ ุงููุฏู."),
        (".ุญุธ [1-64] | ๐ฐ", "ุขูุฉ ุงูุญุธ."),
        (".gym", "ุนุฑุถ ูุชุญุฑู ุฑูุงุถู ุจุณูุท."),
    ],
    "ุงููุณุงุฆุท ูุงูุฃุฏูุงุช": [
        (".ููุชููุจ <ุจุญุซ>", "ุฌูุจ ุฃูู ููุฏูู ูุทุงุจู ูู ููุชููุจ."),
        (".ููุตู", "ุตูุน ููุตู ูู ุตูุฑุฉ/ููุตู ุจุงูุฑุฏ ุนูู ุงููุณุงุฆุท."),
        (".ูุนูููุงุช ุงูููุตู", "ุฌูุจ ูุนูููุงุช ุญุฒูุฉ ุงูููุตูุงุช."),
        (".ุชู <ุฑุงุจุท>", "ุชุญููู ููุฏูู ุชูู ุชูู ุจุฏูู ุนูุงูุฉ ูุงุฆูุฉ."),
    ],
    "ุงูุตูุฏ (ููุฒุฑุงุช)": [
        (".ุตูุฏ <ููุท>", "ุจุฏุก ุนูููุฉ ุตูุฏ ููุฒุฑ ููู ุงูููุท ุงููุญุฏุฏ."),
        (".ุญุงูุฉ ุงูุตูุฏ", "ุนุฑุถ ุญุงูุฉ ุงูุตูุฏ ูุนุฏุฏ ุงููุญุงููุงุช."),
        (".ุงููุงู ุงูุตูุฏ", "ุฅููุงู ุนูููุฉ ุงูุตูุฏ ุงูุญุงููุฉ."),
    ],
    "ุงููุฑุงูุจุฉ": [
        (".ูุฑุงูุจุฉ <@user>", "ุจุฏุก ูุฑุงูุจุฉ ุชุบููุฑุงุช ุงูุงุณู/ุงูุตูุฑุฉ/ุงูุจุงูู ูููุณุชุฎุฏู."),
        (".ุงููุงู_ุงููุฑุงูุจุฉ <@user>", "ุฅููุงู ูุฑุงูุจุฉ ุงููุณุชุฎุฏู."),
    ],
    "ุงูููู ุงูุดุฎุตู": [
        (".ุชูุนูู ุงูุงุณู ุงูููุชู", "ุฅุถุงูุฉ ุงูููุช ุชููุงุฆููุง ุฅูู ุงูุงุณู."),
        (".ุชุนุทูู ุงูุงุณู ุงูููุชู", "ุฅููุงู ูุฅุฒุงูุฉ ุงูููุช ูู ุงูุงุณู."),
        (".ุงูุงุณู (ุงูุงุณู)", "ุชุนููู ุงูุงุณู (ูุน ุงูููุช ุงูุญุงูู)."),
        (".ุงูุชุญุงู", "ุงูุชุญุงู ูุณุชุฎุฏู ุชุฑุฏ ุนููู (ุงุณู/ุจุงูู/ุตูุฑุฉ)."),
        (".ุงุฑุฌุงุน", "ุงุณุชุฑุฌุงุน ุงูุงุณู/ุงูุจุงูู/ุงูุตูุฑุฉ ุงูุฃุตููุฉ ุงููุฎุฒูุฉ."),
    ],
    "ุญูุงูุฉ ุงูุฎุงุต ูุงูุชุญุฐูุฑุงุช": [
        (".ุญูุงูุฉ ุงูุฎุงุต", "ุชูุนูู/ุชุนุทูู ุญูุงูุฉ ุงูุฎุงุต ูู ุงููููุงุช ุงูุณูุฆุฉ."),
        (".ูุจูู", "ูุจูู ูุณุชุฎุฏู ูุญุฏุฏ (ุจุงูุฑุฏ) ูุงุณุชุซูุงุฆู ูู ุงูุชุญุฐูุฑุงุช."),
        (".ุงูุบุงุก ุงููุจูู", "ุฅูุบุงุก ูุจูู ูุณุชุฎุฏู (ุจุงูุฑุฏ)."),
        (".ูุณุญ ุงูุชุญุฐูุฑุงุช", "ูุณุญ ุฌููุน ุชุญุฐูุฑุงุช ุงููุณุชุฎุฏู (ุจุงูุฑุฏ)."),
        (".ุงูุชุญุฐูุฑุงุช", "ุนุฑุถ ุนุฏุฏ ุชุญุฐูุฑุงุชู ุงูุญุงููุฉ."),
        (".ุชุนููู ูููุดุฉ ุงูุชุญุฐูุฑ", "ุชุบููุฑ ุฑุณุงูุฉ ุงูุชุญุฐูุฑ (ุจุงูุฑุฏ ุนูู ุงููุต)."),
        (".ุนุฑุถ ูููุดุฉ", "ุนุฑุถ ุฑุณุงูุฉ ุงูุชุญุฐูุฑ ุงูุญุงููุฉ."),
        (".ุนุฏุฏ ุงูุชุญุฐูุฑุงุช <n>", "ุชุนุฏูู ุงูุญุฏ ุงูุฃูุตู ุงููุณููุญ ูู ุงูุชุญุฐูุฑุงุช."),
        (".ุงููุญุธูุฑูู", "ุนุฑุถ ูุงุฆูุฉ ุงููุญุธูุฑูู (ุญุณุจ ุงูุชุญุฐูุฑุงุช)."),
        (".ูุณุญ ุงููุญุธูุฑูู", "ูุณุญ ุฌููุน ุงููุญุธูุฑูู ูู ุงููุงุฆูุฉ."),
    ],
    "ุงูุงุฎุชุตุงุฑุงุช ูุงููููุฒ": [
        (".ุงุฎุชุตุงุฑ + <ูููุฉ>", "ุญูุธ ุงุฎุชุตุงุฑ ูุตู (ุจุงูุฑุฏ ุนูู ุฑุณุงูุฉ)."),
        (".ุญุฐู ุงุฎุชุตุงุฑ + <ูููุฉ>", "ุญุฐู ุงุฎุชุตุงุฑ ูุญููุธ."),
        (".ุงูุงุฎุชุตุงุฑุงุช", "ุนุฑุถ ุฌููุน ุงูุงุฎุชุตุงุฑุงุช ุงููุญููุธุฉ."),
        (".ูููุฒ <key> <url>", "ุฅุถุงูุฉ ุจุตูุฉ ูููุฒ ูุฑุงุจุท."),
        (".ูููุฒ ุญูุธ <key>", "ุญูุธ ุจุตูุฉ ูููุฒ ูู ูุณุงุฆุท ุจุงูุฑุฏ."),
        (".ูููุฒ ุฌูุจ <key>", "ุฅุฑุณุงู ุงููููุฒ ูููู ุฅู ูุงู ูุณูุทูุง ุฃู ุนุฑุถ ุงูุฑุงุจุท."),
        (".ูููุฒ ุนุฑุถ <key>", "ุนุฑุถ ุงููููุฒ ุงููุฑุชุจุท ุจุงูุจุตูุฉ."),
        (".ูุงุฆูุฉ ุงููููุฒ", "ุนุฑุถ ูุงุฆูุฉ ุจุตูุงุช ุงููููุฒ."),
        ("ุงุฒุงูุฉ <key>", "ุญุฐู ุจุตูุฉ ูููุฒ."),
        (".ุงุฒุงูุฉ_ุงูุจุตูุงุช", "ุญุฐู ุฌููุน ุจุตูุงุช ุงููููุฒ."),
    ],
    "ุงููุดุฑ ุงูุขูู": [
        (".ุชูุฑุงุฑ <ุซูุงูู> <ุนุฏุฏ> [ูุต]", "ูุดุฑ ูุชูุฑุฑุ ูููู ุจุงูุฑุฏ ุนูู ุตูุฑุฉ/ุฃูุจูู."),
        (".ุชู <ุซูุงูู> <ุนุฏุฏ> [ูุต]", "ุงุฎุชุตุงุฑ ูุฃูุฑ ุงูุชูุฑุงุฑ."),
        (".ูุดุฑ <ุซูุงูู> <ุนุฏุฏ> [ูุต]", "ุงุฎุชุตุงุฑ ุขุฎุฑ ูุฃูุฑ ุงูุชูุฑุงุฑ."),
        (".ุงููุงู ุงููุดุฑ ุงูุชููุงุฆู", "ุฅููุงู ุฌููุน ุนูููุงุช ุงููุดุฑ ุงููุชูุฑุฑุฉ."),
    ],
    "ุฃุฏูุงุช ุงููููุงุช ูุงููุฌููุนุงุช": [
        (".ูุงุฆูู ุฌููุน ุงููููุงุช", "ุนุฑุถ ูุงุฆูุฉ ุงููููุงุช ุงูุนุงูุฉ/ุงูุฎุงุตุฉ."),
        (".ูุงุฆูู ุงููููุงุช ุงููุดุฑู ุนูููุง", "ุนุฑุถ ุงููููุงุช ุงูุชู ุฃูุช ูุดุฑู ูููุง."),
        (".ูุงุฆูู ูููุงุชู", "ุนุฑุถ ุงููููุงุช ุงูุชู ุฃูุช ูุงูููุง."),
        (".ูุงุฆูู ุฌููุน ุงููุฌููุนุงุช", "ุนุฑุถ ุฌููุน ุงููุฌููุนุงุช (ุงูุนุงุฏูุฉ/ุงูุฎุงุฑูุฉ)."),
        (".ูุงุฆูู ูุฌููุนุงุช ุงุฏูุฑูุง", "ุนุฑุถ ุงููุฌููุนุงุช ุงูุชู ุฃูุช ูุดุฑู ูููุง."),
        (".ูุงุฆูู ูุฑูุจุงุชู", "ุนุฑุถ ุงููุฌููุนุงุช ุงูุชู ุฃูุช ูุงูููุง."),
        (".ูุดู ุงููุฌููุนุฉ [reply/ID]", "ูุดู ูุนูููุงุช ูุชูุฏูุฉ ุนู ูุฌููุนุฉ/ููุงุฉ."),
    ],
    "ุงูุฅุฏุงุฑุฉ": [
        (".ุญุธุฑ [reply/ID/@]", "ุญุธุฑ ูุณุชุฎุฏู ูู ุงููุฌููุนุฉ."),
        (".ุทุฑุฏ [reply/ID/@]", "ุทุฑุฏ ูุณุชุฎุฏู ูู ุงููุฌููุนุฉ."),
        (".ุชูููุฏ [reply/ID/@]", "ุชูููุฏ ุฅุฑุณุงู ุงูุฑุณุงุฆู ููุณุชุฎุฏู."),
        (".ุงูุบุงุก ุงูุญุธุฑ [reply/ID/@]", "ุฅูุบุงุก ุงูุญุธุฑ."),
        (".ุงูุบุงุก ุงูุชูููุฏ [reply/ID/@]", "ุฅูุบุงุก ุงูุชูููุฏ."),
    ],
}

SECTIONS = list(COMMANDS.keys())

def build_section(title, items):
    lines = [f"โข {cmd}\n  โคท {desc}" for cmd, desc in items]
    return f"ใ {title} ใ\n" + "\n".join(lines)

def build_help_text():
    parts = [HEADER]
    for title, items in COMMANDS.items():
        parts.append(build_section(title, items))
        parts.append(SEPARATOR)
    parts.append(FOOTER)
    text = "\n".join(parts)
    return text

def build_section_text(title):
    items = COMMANDS.get(title, [])
    return HEADER + build_section(title, items) + FOOTER

def build_menu_text():
    return (
        HEADER
        + "ุงุฎุชุฑ ูุณููุง ูู ุงูุฃุฒุฑุงุฑ ุฃุฏูุงู ูุนุฑุถ ุฃูุงูุฑู ูุน ุงูุดุฑุญ.\n"
        + FOOTER
    )

def build_menu_buttons():
    # ุชุฑุชูุจ ุงูุฃุณูุงุก ูู ุฃุฒุฑุงุฑ ูู ุตููู ูุชูุงุฒูุฉ
    rows = []
    row = []
    for idx, title in enumerate(SECTIONS, start=1):
        row.append(Button.inline(title, data=f"help:{title}".encode()))
        if len(row) == 2:
            rows.append(row)
            row = []
    if row:
        rows.append(row)
    # ุตู ุฃุฎูุฑ ููุฃูุงูุฑ ุงูุนุงูุฉ
    rows.append([Button.inline("ุนุฑุถ ุงููู", data=b"help:ALL")])
    return rows

def build_section_buttons(title):
    # ุฃุฒุฑุงุฑ ุชููู: ุฑุฌูุน ูููุงุฆูุฉ + ุฃูุณุงู ูุฌุงูุฑุฉ ุณุฑูุนุฉ
    buttons = [[Button.inline("โต ุงููุงุฆูุฉ", data=b"help:MENU")]]
    # ุฅุถุงูุฉ ุฃุฒุฑุงุฑ ุณุฑูุนุฉ ูุซูุงุซุฉ ุฃูุณุงู ุฃุฎุฑู
    quick = []
    for t in SECTIONS:
        if t != title and len(quick) < 3:
            quick.append(Button.inline(t, data=f"help:{t}".encode()))
    if quick:
        buttons.append(quick)
    return buttons

async def send_chunked(event, text, chunk_size=3500):
    chunks = []
    while text:
        chunks.append(text[:chunk_size])
        text = text[chunk_size:]
    if chunks:
        await event.edit(chunks[0])
        for ch in chunks[1:]:
            await event.respond(ch)

@client.on(events.NewMessage(outgoing=True, pattern=r"\.(?:ุงูุงูุงูุฑ|ุงูุงูุฑ|help)$"))
async def show_commands(event):
    await event.edit("ุฌุงุฑู ุฅุนุฏุงุฏ ูุงุฆูุฉ ุงูุฃูุงูุฑ...")
    text = build_help_text()
    await send_chunked(event, text)

# ูุงุฆูุฉ ุงููุณุงุนุฏุฉ ุงูุชูุงุนููุฉ
@client.on(events.NewMessage(outgoing=True, pattern=r"\.(?:ุงููุณุงุนุฏุฉ|ูุณุงุนุฏุฉ)$"))
async def show_help_menu(event):
    await event.edit(build_menu_text(), buttons=build_menu_buttons())

@client.on(events.CallbackQuery)
async def help_callback(event):
    data = event.data or b""
    if not data.startswith(b"help:"):
        return
    key = data.decode().split(":", 1)[1]
    if key == "MENU":
        await event.edit(build_menu_text(), buttons=build_menu_buttons())
    elif key == "ALL":
        # ูุฏ ุชููู ุทูููุฉุ ุงุณุชุฎุฏู ุชูุณูู
        await event.edit("ุฌุงุฑู ุนุฑุถ ุฌููุน ุงูุฃูุณุงู...")
        text = build_help_text()
        # ูุง ูููู ุฅุฑุณุงู ุฑุฏูุฏ ุฅุถุงููุฉ ุนุจุฑ CallbackQuery ูุจุงุดุฑุฉ ูู ุจุนุถ ุงูุญุงูุงุชุ
        # ูุฐุง ุณูุญููููุง ุจุฑุณุงูุฉ ุฌุฏูุฏุฉ ูู ููุณ ุงูุฏุฑุฏุดุฉ.
        await client.send_message(event.chat_id, text)
        await event.answer("ุชู ุงูุฅุฑุณุงู.")
    else:
        # ูุณู ูุญุฏุฏ
        if key in COMMANDS:
            text = build_section_text(key)
            await event.edit(text, buttons=build_section_buttons(key))
            await event.answer(f"ุชู ูุชุญ ูุณู: {key}")
        else:
            await event.answer("ูุณู ุบูุฑ ูุนุฑูู.", alert=True)