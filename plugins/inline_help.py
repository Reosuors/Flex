from telethon import events, Button
from core.bot_client import bot

# Inline-mode helper so users can get interactive buttons in any chat
# even if the bot is not a member. Requires enabling inline mode in BotFather.

HEADER = (
    "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ\n"
    "โ   ๐ฉ ูุงุฆูุฉ ุฃูุงูุฑ FLEX โ ููููุฒุฉ ูุณููุฉ ุงูุงุณุชุฎุฏุงู ๐ช   โ\n"
    "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ\n"
)
FOOTER = "\nโ ูุณุชูุฏ ุงูุฃูุงูุฑ โข FLEX (Inline) โ\n"
SEPARATOR = "\nโโโโโโโโโโโ\n"

# Keep sections in sync with plugins.help COMMANDS
COMMANDS = {
    "ุงูุฅุญุตุงุฆูุงุช": [
        (".ุงุญุตุงุฆูุงุชู", "ูุนุฑุถ ุฅุญุตุงุฆูุงุช ุงูุญุณุงุจ: ุงููุณุชุฎุฏูููุ ุงููุฌููุนุงุชุ ุงููููุงุชุ ุงูุจูุชุงุช."),
        (".ูุนูููุงุชู", "ุชูุงุตูู ูุชูุฏูุฉ ุนู ุงูุญุณุงุจ: ุนุฏุฏ ุงููุญุงุฏุซุงุชุ ุงูุจูุชุงุชุ ุงููุฌููุนุงุช ูุงููููุงุช."),
    ],
    "ุงูุชุฎุฒูู": [
        (".ุชูุนูู ุงูุชุฎุฒูู", "ุฅูุดุงุก ูุชูุนูู ูุฑูุจ ุชุฎุฒูู ุฎุงุต ุจุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ ูู ุงูุฎุงุต."),
        (".ุชุนุทูู ุงูุชุฎุฒูู", "ุฅููุงู ุงูุชุฎุฒูู ูุญุฐู ุชุนุฑูู ูุฌููุนุฉ ุงูุชุฎุฒูู ุงููุญููุฉ."),
    ],
    "ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ": [
        (".ุงุถู ุฑุฏ + ุงููููุฉ + ุงูุฑุฏ", "ุฅุถุงูุฉ ุฑุฏ ุชููุงุฆู ูููููุฉ ุงููุญุฏุฏุฉ."),
        (".ุงูุฑุฏูุฏ", "ุนุฑุถ ุฌููุน ุงูุฑุฏูุฏ ุงููุฎุฒูุฉ."),
        (".ุชูุนูู ููุง", "ุชูุนูู ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ ูู ุงููุฌููุนุฉ ุงูุญุงููุฉ."),
        (".ุชุนุทูู ููุง", "ุชุนุทูู ุงูุฑุฏูุฏ ุงูุชููุงุฆูุฉ ูู ุงููุฌููุนุฉ ุงูุญุงููุฉ."),
    ],
    "ูุถุน ุงูุบูุงุจ ูุงูุฑุฏูุฏ ุงููุฎุตุตุฉ": [
        (".ุชุดุบูู ุงูุฑุฏ", "ุชุดุบูู ุงูุฑุฏ ุงูุชููุงุฆู ููุฎุงุต."),
        (".ุงููุฎุตุต ุชุดุบูู", "ุชุดุบูู ุงูุฑุฏูุฏ ุงููุฎุตุตุฉ ุงููุจููุฉ ุนูู ูุตูุต ูุญุฏุฏุฉ."),
        (".ุชุนุทูู ุงูุฑุฏ", "ุชุนุทูู ุงูุฑุฏ ุงูุชููุงุฆู ูุงูุฑุฏูุฏ ุงููุฎุตุตุฉ."),
        (".ูููุดุฉ ุงูุฑุฏ", "ุชุนููู ุฑุณุงูุฉ ูุญุฏุฏุฉ ูุชููู ูููุดุฉ ุงูุฑุฏ (ุจุงูุฑุฏ ุนูู ุฑุณุงูุฉ)."),
        (".ุฑุฏ <ุงููุต>", "ุฅุถุงูุฉ ุฑุฏ ูุฎุตุต ููุต ูุชู ุงูุฑุฏ ุนููู."),
        (".ุญุฐู ุฑุฏ", "ุญุฐู ุฑุฏ ูุฎุตุต (ุจุงูุฑุฏ ุนูู ูุต ูุถุงู ุณุงุจููุง)."),
        (".ุณูุงุญ", "ุณูุงุญ ูุญุงุฏุซุฉ ุฎุงุตุฉ ูุนููุฉ ูู ูููุฏ ุงูุฑุฏ."),
        (".ุงูุบุงุก ุงูุณูุงุญ", "ุฅูุบุงุก ุงูุณูุงุญ ููุญุงุฏุซุฉ ุฎุงุตุฉ."),
    ],
    "ุงูุฃูุนุงุจ": [
        (".ุณูู [1-6] | ๐ฏ", "ูุนุจุฉ ุงูุณูู. ูููู ุชุญุฏูุฏ ุฑูู ูุทููุจ."),
        (".ูุฑุฏ [1-6] | ๐ฒ", "ูุนุจุฉ ุงููุฑุฏ. ูููู ุชุญุฏูุฏ ุฑูู ูุทููุจ."),
        (".ุณูู [1-5] | ๐", "ูุนุจุฉ ูุฑุฉ ุงูุณูุฉ."),
        (".ูุฑุฉ [1-5] | โฝ๏ธ", "ูุนุจุฉ ูุฑุฉ ุงููุฏู."),
        (".ุญุธ [1-64] | ๐ฐ", "ุขูุฉ ุงูุญุธ."),
        (".gym", "ุนุฑุถ ูุชุญุฑู ุฑูุงุถู ุจุณูุท."),
        (".ุงุญูุงู", "ูุชุญ ูุงุฆูุฉ ูุนุจุฉ ุงูุฃุญูุงู (ุญูู/ุญูููุฉ)."),
        (".ุญูู", "ููููุฏ ุชุญุฏูู/ููููุฉ ุฎูููุฉ ูุนูููุฉ."),
        (".ุญูููุฉ", "ููููุฏ ุณุคุงู ุญูููุฉ ูุญุชุฑู."),
    ],
    "ุงููุณุงุฆุท ูุงูุฃุฏูุงุช": [
        (".ููุชููุจ <ุจุญุซ>", "ุฌูุจ ุฃูู ููุฏูู ูุทุงุจู ูู ููุชููุจ."),
        (".ููุตู", "ุตูุน ููุตู ูู ุตูุฑุฉ/ููุตู ุจุงูุฑุฏ ุนูู ุงููุณุงุฆุท."),
        (".ูุนูููุงุช ุงูููุตู", "ุฌูุจ ูุนูููุงุช ุญุฒูุฉ ุงูููุตูุงุช."),
        (".ุชู <ุฑุงุจุท>", "ุชุญููู ููุฏูู ุชูู ุชูู ุจุฏูู ุนูุงูุฉ ูุงุฆูุฉ."),
    ],
    "ุงูุฐูุงุก ุงูุงุตุทูุงุนู": [
        (".ุชุฑุฌู <ูุบุฉ> [ูุต/ุจุงูุฑุฏ]", "ุชุฑุฌูุฉ ุฐููุฉ ุนุจุฑ Google (gpytranslate/deep-translator)."),
        (".ูุดู_ูุบุฉ [ูุต/ุจุงูุฑุฏ]", "ูุดู ูุบุฉ ุงููุต ุชููุงุฆููุง."),
        (".ุชูุฎูุต [ุนุฏุฏ_ุงูุฌูู] (ุจุงูุฑุฏ)", "ุชูุฎูุต ุณุฑูุน ูููุต ุฅูู ุนุฏุฏ ุฌูู ูุญุฏุฏ."),
    ],
    "ุงูุตูุฏ (ููุฒุฑุงุช)": [
        (".ุตูุฏ <ููุท>", "ุจุฏุก ุนูููุฉ ุตูุฏ ููุฒุฑ ููู ุงูููุท ุงููุญุฏุฏ."),
        (".ุญุงูุฉ ุงูุตูุฏ", "ุนุฑุถ ุญุงูุฉ ุงูุตูุฏ ูุนุฏุฏ ุงููุญุงููุงุช."),
        (".ุงููุงู ุงูุตูุฏ", "ุฅููุงู ุนูููุฉ ุงูุตูุฏ ุงูุญุงููุฉ."),
    ],
    "ุงููุฑุงูุจุฉ": [
        (".ูุฑุงูุจุฉ <@user>", "ุจุฏุก ูุฑุงูุจุฉ ุชุบููุฑุงุช ุงูุงุณู/ุงูุตูุฑุฉ/ุงูุจุงูู ูููุณุชุฎุฏู."),
        (".ุงููุงู_ุงููุฑุงูุจุฉ <@user>", "ุฅููุงู ูุฑุงูุจุฉ ุงููุณุชุฎุฏู."),
    ],
    "ุงูููู ุงูุดุฎุตู": [
        (".ุชูุนูู ุงูุงุณู ุงูููุชู", "ุฅุถุงูุฉ ุงูููุช ุชููุงุฆููุง ุฅูู ุงูุงุณู."),
        (".ุชุนุทูู ุงูุงุณู ุงูููุชู", "ุฅููุงู ูุฅุฒุงูุฉ ุงูููุช ูู ุงูุงุณู."),
        (".ุงูุงุณู (ุงูุงุณู)", "ุชุนููู ุงูุงุณู (ูุน ุงูููุช ุงูุญุงูู)."),
        (".ุงูุชุญุงู", "ุงูุชุญุงู ูุณุชุฎุฏู ุชุฑุฏ ุนููู (ุงุณู/ุจุงูู/ุตูุฑุฉ)."),
        (".ุงุฑุฌุงุน", "ุงุณุชุฑุฌุงุน ุงูุงุณู/ุงูุจุงูู/ุงูุตูุฑุฉ ุงูุฃุตููุฉ ุงููุฎุฒูุฉ."),
    ],
    "ุญูุงูุฉ ุงูุฎุงุต ูุงูุชุญุฐูุฑุงุช": [
        (".ุญูุงูุฉ ุงูุฎุงุต", "ุชูุนูู/ุชุนุทูู ุญูุงูุฉ ุงูุฎุงุต ูู ุงููููุงุช ุงูุณูุฆุฉ."),
        (".ูุจูู", "ูุจูู ูุณุชุฎุฏู ูุญุฏุฏ (ุจุงูุฑุฏ) ูุงุณุชุซูุงุฆู ูู ุงูุชุญุฐูุฑุงุช."),
        (".ุงูุบุงุก ุงููุจูู", "ุฅูุบุงุก ูุจูู ูุณุชุฎุฏู (ุจุงูุฑุฏ)."),
        (".ูุณุญ ุงูุชุญุฐูุฑุงุช", "ูุณุญ ุฌููุน ุชุญุฐูุฑุงุช ุงููุณุชุฎุฏู (ุจุงูุฑุฏ)."),
        (".ุงูุชุญุฐูุฑุงุช", "ุนุฑุถ ุนุฏุฏ ุชุญุฐูุฑุงุชู ุงูุญุงููุฉ."),
        (".ุชุนููู ูููุดุฉ ุงูุชุญุฐูุฑ", "ุชุบููุฑ ุฑุณุงูุฉ ุงูุชุญุฐูุฑ (ุจุงูุฑุฏ ุนูู ุงููุต)."),
        (".ุนุฑุถ ูููุดุฉ", "ุนุฑุถ ุฑุณุงูุฉ ุงูุชุญุฐูุฑ ุงูุญุงููุฉ."),
        (".ุนุฏุฏ ุงูุชุญุฐูุฑุงุช <n>", "ุชุนุฏูู ุงูุญุฏ ุงูุฃูุตู ุงููุณููุญ ูู ุงูุชุญุฐูุฑุงุช."),
        (".ุงููุญุธูุฑูู", "ุนุฑุถ ูุงุฆูุฉ ุงููุญุธูุฑูู (ุญุณุจ ุงูุชุญุฐูุฑุงุช)."),
        (".ูุณุญ ุงููุญุธูุฑูู", "ูุณุญ ุฌููุน ุงููุญุธูุฑูู ูู ุงููุงุฆูุฉ."),
    ],
    "ุงูุงุฎุชุตุงุฑุงุช ูุงููููุฒ": [
        (".ุงุฎุชุตุงุฑ + <ูููุฉ>", "ุญูุธ ุงุฎุชุตุงุฑ ูุตู (ุจุงูุฑุฏ ุนูู ุฑุณุงูุฉ)."),
        (".ุญุฐู ุงุฎุชุตุงุฑ + <ูููุฉ>", "ุญุฐู ุงุฎุชุตุงุฑ ูุญููุธ."),
        (".ุงูุงุฎุชุตุงุฑุงุช", "ุนุฑุถ ุฌููุน ุงูุงุฎุชุตุงุฑุงุช ุงููุญููุธุฉ."),
        (".ูููุฒ <key> <url>", "ุฅุถุงูุฉ ุจุตูุฉ ูููุฒ ูุฑุงุจุท."),
        (".ูููุฒ ุญูุธ <key>", "ุญูุธ ุจุตูุฉ ูููุฒ ูู ูุณุงุฆุท ุจุงูุฑุฏ."),
        (".ูููุฒ ุฌูุจ <key>", "ุฅุฑุณุงู ุงููููุฒ ูููู ุฅู ูุงู ูุณูุทูุง ุฃู ุนุฑุถ ุงูุฑุงุจุท."),
        (".ูููุฒ ุนุฑุถ <key>", "ุนุฑุถ ุงููููุฒ ุงููุฑุชุจุท ุจุงูุจุตูุฉ."),
        (".ูุงุฆูุฉ ุงููููุฒ", "ุนุฑุถ ูุงุฆูุฉ ุจุตูุงุช ุงููููุฒ."),
        ("ุงุฒุงูุฉ <key>", "ุญุฐู ุจุตูุฉ ูููุฒ."),
        (".ุงุฒุงูุฉ_ุงูุจุตูุงุช", "ุญุฐู ุฌููุน ุจุตูุงุช ุงููููุฒ."),
    ],
    "ุงููุดุฑ ุงูุขูู": [
        (".ุชูุฑุงุฑ <ุซูุงูู> <ุนุฏุฏ> [ูุต]", "ูุดุฑ ูุชูุฑุฑุ ูููู ุจุงูุฑุฏ ุนูู ุตูุฑุฉ/ุฃูุจูู."),
        (".ุชู <ุซูุงูู> <ุนุฏุฏ> [ูุต]", "ุงุฎุชุตุงุฑ ูุฃูุฑ ุงูุชูุฑุงุฑ."),
        (".ูุดุฑ <ุซูุงูู> <ุนุฏุฏ> [ูุต]", "ุงุฎุชุตุงุฑ ุขุฎุฑ ูุฃูุฑ ุงูุชูุฑุงุฑ."),
        (".ุงููุงู ุงููุดุฑ ุงูุชููุงุฆู", "ุฅููุงู ุฌููุน ุนูููุงุช ุงููุดุฑ ุงููุชูุฑุฑุฉ."),
    ],
    "ุฃุฏูุงุช ุงููููุงุช ูุงููุฌููุนุงุช": [
        (".ูุงุฆูู ุฌููุน ุงููููุงุช", "ุนุฑุถ ูุงุฆูุฉ ุงููููุงุช ุงูุนุงูุฉ/ุงูุฎุงุตุฉ."),
        (".ูุงุฆูู ุงููููุงุช ุงููุดุฑู ุนูููุง", "ุนุฑุถ ุงููููุงุช ุงูุชู ุฃูุช ูุดุฑู ูููุง."),
        (".ูุงุฆูู ูููุงุชู", "ุนุฑุถ ุงููููุงุช ุงูุชู ุฃูุช ูุงูููุง."),
        (".ูุงุฆูู ุฌููุน ุงููุฌููุนุงุช", "ุนุฑุถ ุฌููุน ุงููุฌููุนุงุช (ุงูุนุงุฏูุฉ/ุงูุฎุงุฑูุฉ)."),
        (".ูุงุฆูู ูุฌููุนุงุช ุงุฏูุฑูุง", "ุนุฑุถ ุงููุฌููุนุงุช ุงูุชู ุฃูุช ูุดุฑู ูููุง."),
        (".ูุงุฆูู ูุฑูุจุงุชู", "ุนุฑุถ ุงููุฌููุนุงุช ุงูุชู ุฃูุช ูุงูููุง."),
        (".ูุดู ุงููุฌููุนุฉ [reply/ID]", "ูุดู ูุนูููุงุช ูุชูุฏูุฉ ุนู ูุฌููุนุฉ/ููุงุฉ."),
    ],
    "ุงูุฅุฏุงุฑุฉ": [
        (".ุญุธุฑ [reply/ID/@]", "ุญุธุฑ ูุณุชุฎุฏู ูู ุงููุฌููุนุฉ."),
        (".ุทุฑุฏ [reply/ID/@]", "ุทุฑุฏ ูุณุชุฎุฏู ูู ุงููุฌููุนุฉ."),
        (".ุชูููุฏ [reply/ID/@]", "ุชูููุฏ ุฅุฑุณุงู ุงูุฑุณุงุฆู ููุณุชุฎุฏู."),
        (".ุงูุบุงุก ุงูุญุธุฑ [reply/ID/@]", "ุฅูุบุงุก ุงูุญุธุฑ."),
        (".ุงูุบุงุก ุงูุชูููุฏ [reply/ID/@]", "ุฅูุบุงุก ุงูุชูููุฏ."),
    ],
}

SECTIONS = list(COMMANDS.keys())

def build_section(title, items):
    lines = [f"โข {cmd}\n  โคท {desc}" for cmd, desc in items]
    return f"ใ {title} ใ\n" + "\n".join(lines)

def build_help_text():
    parts = [HEADER]
    for title, items in COMMANDS.items():
        parts.append(build_section(title, items))
        parts.append(SEPARATOR)
    parts.append(FOOTER)
    text = "\n".join(parts)
    return text

def build_section_text(title):
    items = COMMANDS.get(title, [])
    return HEADER + build_section(title, items) + FOOTER

def build_menu_text():
    return (
        HEADER
        + "ุงุฎุชุฑ ูุณููุง ูู ุงูุฃุฒุฑุงุฑ ุฃุฏูุงู ูุนุฑุถ ุฃูุงูุฑู ูุน ุงูุดุฑุญ.\n"
        + FOOTER
    )

def build_menu_buttons():
    rows = []
    row = []
    for idx, title in enumerate(SECTIONS):
        row.append(Button.inline(title, data=f"inline_help:idx:{idx}".encode()))
        if len(row) == 2:
            rows.append(row)
            row = []
    if row:
        rows.append(row)
    rows.append([Button.inline("ุนุฑุถ ุงููู", data=b"inline_help:ALL")])
    return rows

def build_section_buttons_by_index(index):
    buttons = []
    nav = []
    if index > 0:
        nav.append(Button.inline("โต ุงูุณุงุจู", data=f"inline_help:idx:{index-1}".encode()))
    else:
        nav.append(Button.inline("โต ุงููุงุฆูุฉ", data=b"inline_help:MENU"))
    if index < len(SECTIONS) - 1:
        nav.append(Button.inline("ุงูุชุงูู โถ", data=f"inline_help:idx:{index+1}".encode()))
    else:
        nav.append(Button.inline("โต ุงููุงุฆูุฉ", data=b"inline_help:MENU"))
    buttons.append(nav)
    buttons.append([
        Button.inline("ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ", data=b"inline_help:MENU"),
        Button.inline("ุนุฑุถ ุงููู", data=b"inline_help:ALL")
    ])
    return buttons

# Only register if bot client exists
if bot is not None:
    @bot.on(events.InlineQuery)
    async def inline_query_handler(event):
        # Trigger on keywords like 'help'/'ูุณุงุนุฏุฉ' or empty
        q = (event.query or "").strip().lower()
        if q not in ("", "help", "ูุณุงุนุฏุฉ", "ุงูุงูุงูุฑ", "ุงูุงูุฑ"):
            return
        # Build a single article that shows the menu with buttons
        text = build_menu_text()
        buttons = build_menu_buttons()
        await event.answer([
            event.builder.article(
                title="ูุงุฆูุฉ ุงููุณุงุนุฏุฉ โข FLEX",
                text=text,
                buttons=buttons,
                description="ุฃูุชุญ ูุงุฆูุฉ ุงูุฃูุณุงู ุจุฃุฒุฑุงุฑ ุชููู",
            )
        ], cache_time=0)

    @bot.on(events.CallbackQuery)
    async def inline_help_callback(event):
        data = event.data or b""
        if not data.startswith(b"inline_help:"):
            return
        parts = data.decode().split(":")
        if len(parts) == 2 and parts[1] in {"MENU", "ALL"}:
            key = parts[1]
            if key == "MENU":
                await event.edit(build_menu_text(), buttons=build_menu_buttons())
            elif key == "ALL":
                await event.edit("ุฌุงุฑู ุนุฑุถ ุฌููุน ุงูุฃูุณุงู...")
                text = build_help_text()
                await bot.send_message(event.chat_id, text)
                await event.answer("ุชู ุงูุฅุฑุณุงู.")
            return
        if len(parts) == 3 and parts[1] == "idx":
            try:
                index = int(parts[2])
            except ValueError:
                await event.answer("ููุฑุณ ุบูุฑ ุตุงูุญ.", alert=True)
                return
            if not (0 <= index < len(SECTIONS)):
                await event.answer("ุฎุงุฑุฌ ุงููุทุงู.", alert=True)
                return
            title = SECTIONS[index]
            text = build_section_text(title)
            await event.edit(text, buttons=build_section_buttons_by_index(index))
            await event.answer(f"ุชู ูุชุญ ูุณู: {title}")
        else:
            await event.answer("ุฃูุฑ ุบูุฑ ูุนุฑูู.", alert=True)